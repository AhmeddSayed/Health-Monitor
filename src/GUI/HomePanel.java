/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import ECG.ECGController;
import data.control.DataController;
import data.control.Patient;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;

/**
 *
 * @author Ahmed
 */
public class HomePanel extends javax.swing.JPanel {

    //ecgDrawPanel ecgPanel;
    boolean isOnScreen = false;
    boolean alarmIsReviewed = false;
    volatile Alarm theAlarm = new Alarm();
    SwingWorker worker;
    int minimumHeartRate, maximumHeartRate;
    volatile private Patient firstPatient, secondPatient;
    ECGController ecgController = new ECGController();

    /**
     * Creates new form HomeCard
     */
    public HomePanel() {
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        monitor1 = new javax.swing.JPanel();
        patient1 = new javax.swing.JLabel();
        ecgDrawPanel1 = new ECG.ecgDrawPanel();
        patient1Temp = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        editPatient1 = new javax.swing.JButton();
        deletePatient1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        patient1bpm = new javax.swing.JTextField();
        monitor2 = new javax.swing.JPanel();
        patient2 = new javax.swing.JLabel();
        ecgDrawPanel2 = new ECG.ecgDrawPanel();
        patient2Temp = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        editPatient2 = new javax.swing.JButton();
        deletePatient2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        patient2bpm = new javax.swing.JTextField();
        monitor3 = new javax.swing.JPanel();
        patient3 = new javax.swing.JLabel();
        ecgDrawPanel3 = new ECG.ecgDrawPanel();
        patient1Temp1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        editPatient3 = new javax.swing.JButton();
        deletePatient3 = new javax.swing.JButton();
        patient1bpm2 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        monitor4 = new javax.swing.JPanel();
        patient4 = new javax.swing.JLabel();
        ecgDrawPanel4 = new ECG.ecgDrawPanel();
        patient2Temp1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        editPatient4 = new javax.swing.JButton();
        deletePatient4 = new javax.swing.JButton();
        patient1bpm3 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        separator23 = new javax.swing.JSeparator();
        separator12 = new javax.swing.JSeparator();
        separator34 = new javax.swing.JSeparator();

        jLabel3.setText("Patient 1");

        patient1.setText("Patient 1");

        ecgDrawPanel1.setAutoscrolls(true);
        ecgDrawPanel1.setPreferredSize(new java.awt.Dimension(0, 150));

        javax.swing.GroupLayout ecgDrawPanel1Layout = new javax.swing.GroupLayout(ecgDrawPanel1);
        ecgDrawPanel1.setLayout(ecgDrawPanel1Layout);
        ecgDrawPanel1Layout.setHorizontalGroup(
            ecgDrawPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        ecgDrawPanel1Layout.setVerticalGroup(
            ecgDrawPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        patient1Temp.setText("jTextField1");

        jLabel1.setText("Tempreature:");

        editPatient1.setText("Edit");
        editPatient1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPatient1ActionPerformed(evt);
            }
        });

        deletePatient1.setText("Delete");
        deletePatient1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePatient1ActionPerformed(evt);
            }
        });

        jLabel8.setText("Heart Rate:");

        patient1bpm.setText("jTextField1");

        javax.swing.GroupLayout monitor1Layout = new javax.swing.GroupLayout(monitor1);
        monitor1.setLayout(monitor1Layout);
        monitor1Layout.setHorizontalGroup(
            monitor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(monitor1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ecgDrawPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(monitor1Layout.createSequentialGroup()
                .addGroup(monitor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(monitor1Layout.createSequentialGroup()
                        .addComponent(editPatient1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deletePatient1))
                    .addGroup(monitor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(monitor1Layout.createSequentialGroup()
                            .addGap(99, 99, 99)
                            .addComponent(patient1))
                        .addGroup(monitor1Layout.createSequentialGroup()
                            .addGap(33, 33, 33)
                            .addGroup(monitor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(monitor1Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(patient1bpm, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(monitor1Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(39, 39, 39)
                                    .addComponent(patient1Temp, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        monitor1Layout.setVerticalGroup(
            monitor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(monitor1Layout.createSequentialGroup()
                .addGroup(monitor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(monitor1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(patient1))
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ecgDrawPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(monitor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patient1Temp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(1, 1, 1)
                .addGroup(monitor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patient1bpm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(monitor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editPatient1)
                    .addComponent(deletePatient1))
                .addContainerGap())
        );

        patient2.setText("Patient 2");

        ecgDrawPanel2.setAutoscrolls(true);
        ecgDrawPanel2.setPreferredSize(new java.awt.Dimension(0, 150));

        javax.swing.GroupLayout ecgDrawPanel2Layout = new javax.swing.GroupLayout(ecgDrawPanel2);
        ecgDrawPanel2.setLayout(ecgDrawPanel2Layout);
        ecgDrawPanel2Layout.setHorizontalGroup(
            ecgDrawPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        ecgDrawPanel2Layout.setVerticalGroup(
            ecgDrawPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        patient2Temp.setText("jTextField1");

        jLabel2.setText("Tempreature:");

        editPatient2.setText("Edit");
        editPatient2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPatient2ActionPerformed(evt);
            }
        });

        deletePatient2.setText("Delete");
        deletePatient2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePatient2ActionPerformed(evt);
            }
        });

        jLabel9.setText("Heart Rate:");

        patient2bpm.setText("jTextField1");

        javax.swing.GroupLayout monitor2Layout = new javax.swing.GroupLayout(monitor2);
        monitor2.setLayout(monitor2Layout);
        monitor2Layout.setHorizontalGroup(
            monitor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(monitor2Layout.createSequentialGroup()
                .addGroup(monitor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(monitor2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ecgDrawPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))
                    .addGroup(monitor2Layout.createSequentialGroup()
                        .addGroup(monitor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(monitor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(monitor2Layout.createSequentialGroup()
                                    .addComponent(editPatient2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(deletePatient2))
                                .addGroup(monitor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(monitor2Layout.createSequentialGroup()
                                        .addGap(99, 99, 99)
                                        .addComponent(patient2))
                                    .addGroup(monitor2Layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addGroup(monitor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(monitor2Layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(patient2bpm, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(monitor2Layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(39, 39, 39)
                                                .addComponent(patient2Temp, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 76, Short.MAX_VALUE)))
                .addContainerGap())
        );
        monitor2Layout.setVerticalGroup(
            monitor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(monitor2Layout.createSequentialGroup()
                .addGroup(monitor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(monitor2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(patient2))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ecgDrawPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(monitor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patient2Temp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(monitor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patient2bpm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(monitor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editPatient2)
                    .addComponent(deletePatient2))
                .addContainerGap())
        );

        patient3.setText("Patient 1");

        ecgDrawPanel3.setAutoscrolls(true);
        ecgDrawPanel3.setPreferredSize(new java.awt.Dimension(0, 150));

        javax.swing.GroupLayout ecgDrawPanel3Layout = new javax.swing.GroupLayout(ecgDrawPanel3);
        ecgDrawPanel3.setLayout(ecgDrawPanel3Layout);
        ecgDrawPanel3Layout.setHorizontalGroup(
            ecgDrawPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        ecgDrawPanel3Layout.setVerticalGroup(
            ecgDrawPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        patient1Temp1.setText("No Input");
        patient1Temp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patient1Temp1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Tempreature:");

        editPatient3.setText("Edit");
        editPatient3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPatient3ActionPerformed(evt);
            }
        });

        deletePatient3.setText("Delete");
        deletePatient3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePatient3ActionPerformed(evt);
            }
        });

        patient1bpm2.setText("No Input");
        patient1bpm2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patient1bpm2ActionPerformed(evt);
            }
        });

        jLabel10.setText("Heart Rate:");

        javax.swing.GroupLayout monitor3Layout = new javax.swing.GroupLayout(monitor3);
        monitor3.setLayout(monitor3Layout);
        monitor3Layout.setHorizontalGroup(
            monitor3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, monitor3Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(monitor3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(monitor3Layout.createSequentialGroup()
                        .addComponent(editPatient3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deletePatient3))
                    .addGroup(monitor3Layout.createSequentialGroup()
                        .addComponent(patient3)
                        .addGap(54, 54, 54)))
                .addGap(89, 89, 89))
            .addGroup(monitor3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(monitor3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel10))
                .addGap(36, 36, 36)
                .addGroup(monitor3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patient1bpm2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patient1Temp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(monitor3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ecgDrawPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                .addContainerGap())
        );
        monitor3Layout.setVerticalGroup(
            monitor3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(monitor3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(patient3)
                .addGap(28, 28, 28)
                .addComponent(ecgDrawPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(monitor3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patient1Temp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(1, 1, 1)
                .addGroup(monitor3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patient1bpm2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(monitor3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editPatient3)
                    .addComponent(deletePatient3))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        patient4.setText("Patient 2");

        ecgDrawPanel4.setAutoscrolls(true);
        ecgDrawPanel4.setPreferredSize(new java.awt.Dimension(0, 150));

        javax.swing.GroupLayout ecgDrawPanel4Layout = new javax.swing.GroupLayout(ecgDrawPanel4);
        ecgDrawPanel4.setLayout(ecgDrawPanel4Layout);
        ecgDrawPanel4Layout.setHorizontalGroup(
            ecgDrawPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        ecgDrawPanel4Layout.setVerticalGroup(
            ecgDrawPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        patient2Temp1.setText("No Input");

        jLabel5.setText("Tempreature:");

        editPatient4.setText("Edit");
        editPatient4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPatient4ActionPerformed(evt);
            }
        });

        deletePatient4.setText("Delete");
        deletePatient4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePatient4ActionPerformed(evt);
            }
        });

        patient1bpm3.setText("No Input");

        jLabel11.setText("Heart Rate:");

        javax.swing.GroupLayout monitor4Layout = new javax.swing.GroupLayout(monitor4);
        monitor4.setLayout(monitor4Layout);
        monitor4Layout.setHorizontalGroup(
            monitor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(monitor4Layout.createSequentialGroup()
                .addGroup(monitor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(monitor4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ecgDrawPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))
                    .addGroup(monitor4Layout.createSequentialGroup()
                        .addGroup(monitor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(monitor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, monitor4Layout.createSequentialGroup()
                                    .addGap(33, 33, 33)
                                    .addComponent(jLabel5)
                                    .addGap(39, 39, 39)
                                    .addComponent(patient2Temp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(monitor4Layout.createSequentialGroup()
                                    .addGap(74, 74, 74)
                                    .addGroup(monitor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(monitor4Layout.createSequentialGroup()
                                            .addComponent(editPatient4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(deletePatient4)
                                            .addGap(3, 3, 3))
                                        .addGroup(monitor4Layout.createSequentialGroup()
                                            .addComponent(patient4)
                                            .addGap(57, 57, 57)))))
                            .addGroup(monitor4Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(patient1bpm3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 67, Short.MAX_VALUE)))
                .addContainerGap())
        );
        monitor4Layout.setVerticalGroup(
            monitor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(monitor4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(patient4)
                .addGap(28, 28, 28)
                .addComponent(ecgDrawPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(monitor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patient2Temp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(1, 1, 1)
                .addGroup(monitor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patient1bpm3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(monitor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editPatient4)
                    .addComponent(deletePatient4))
                .addContainerGap())
        );

        separator12.setOrientation(javax.swing.SwingConstants.VERTICAL);

        separator34.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(monitor3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(separator34, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(monitor4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(separator23, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(monitor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(separator12, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(monitor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(monitor1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(monitor2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(separator12))
                .addGap(18, 18, 18)
                .addComponent(separator23, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(monitor3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(monitor4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(separator34))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deletePatient1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePatient1ActionPerformed
        confirmDelete(1);

    }//GEN-LAST:event_deletePatient1ActionPerformed

    private void editPatient1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPatient1ActionPerformed
        // TODO add your handling code here:
        mainFrame topFrame = (mainFrame) SwingUtilities.getWindowAncestor(this);
        topFrame.editPatient(1);
    }//GEN-LAST:event_editPatient1ActionPerformed

    private void editPatient2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPatient2ActionPerformed
        // TODO add your handling code here:
        mainFrame topFrame = (mainFrame) SwingUtilities.getWindowAncestor(this);
        topFrame.editPatient(2);
    }//GEN-LAST:event_editPatient2ActionPerformed

    private void deletePatient2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePatient2ActionPerformed
        confirmDelete(2);

    }//GEN-LAST:event_deletePatient2ActionPerformed

    private void editPatient3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPatient3ActionPerformed
        mainFrame topFrame = (mainFrame) SwingUtilities.getWindowAncestor(this);
        topFrame.editPatient(3);
    }//GEN-LAST:event_editPatient3ActionPerformed

    private void deletePatient3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePatient3ActionPerformed
        confirmDelete(3);
    }//GEN-LAST:event_deletePatient3ActionPerformed

    private void editPatient4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPatient4ActionPerformed
        mainFrame topFrame = (mainFrame) SwingUtilities.getWindowAncestor(this);
        topFrame.editPatient(4);
    }//GEN-LAST:event_editPatient4ActionPerformed

    private void deletePatient4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePatient4ActionPerformed
        confirmDelete(4);

    }//GEN-LAST:event_deletePatient4ActionPerformed

    private void patient1Temp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patient1Temp1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patient1Temp1ActionPerformed

    private void patient1bpm2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patient1bpm2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patient1bpm2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deletePatient1;
    private javax.swing.JButton deletePatient2;
    private javax.swing.JButton deletePatient3;
    private javax.swing.JButton deletePatient4;
    private ECG.ecgDrawPanel ecgDrawPanel1;
    private ECG.ecgDrawPanel ecgDrawPanel2;
    private ECG.ecgDrawPanel ecgDrawPanel3;
    private ECG.ecgDrawPanel ecgDrawPanel4;
    private javax.swing.JButton editPatient1;
    private javax.swing.JButton editPatient2;
    private javax.swing.JButton editPatient3;
    private javax.swing.JButton editPatient4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel monitor1;
    private javax.swing.JPanel monitor2;
    private javax.swing.JPanel monitor3;
    private javax.swing.JPanel monitor4;
    private javax.swing.JLabel patient1;
    private javax.swing.JTextField patient1Temp;
    private javax.swing.JTextField patient1Temp1;
    private javax.swing.JTextField patient1bpm;
    private javax.swing.JTextField patient1bpm2;
    private javax.swing.JTextField patient1bpm3;
    private javax.swing.JLabel patient2;
    private javax.swing.JTextField patient2Temp;
    private javax.swing.JTextField patient2Temp1;
    private javax.swing.JTextField patient2bpm;
    private javax.swing.JLabel patient3;
    private javax.swing.JLabel patient4;
    private javax.swing.JSeparator separator12;
    private javax.swing.JSeparator separator23;
    private javax.swing.JSeparator separator34;
    // End of variables declaration//GEN-END:variables
    private void init() {

        this.initComponents();
        this.patient1Temp.setEditable(false);
        this.patient2Temp.setEditable(false);
        ImageIcon imageIcon = new ImageIcon(("src/resources/images/1.gif"));
        this.jLabel6.setIcon(imageIcon);
        this.jLabel6.setVisible(false);
        this.jLabel7.setIcon(imageIcon);
        this.jLabel7.setVisible(false);
    }

    public void displayChart() {
        mainFrame topFrame = (mainFrame) SwingUtilities.getWindowAncestor(this);
        DataController theDataController = topFrame.dataController;

        // calling the update input function to read from usb
        theDataController.updateInput();

        this.firstPatient = theDataController.getPatients().get(0);
        this.secondPatient = theDataController.getPatients().get(1);

        worker = new SwingWorker() {

            @Override
            protected synchronized Object doInBackground() throws Exception {
                if (!isCancelled()) {

                    while (true && !isCancelled()) {
                        // reading values from patients & setting the values to display
                        patient1Temp.setText(String.valueOf(firstPatient.getTemp()));
                        patient1bpm.setText(String.valueOf(firstPatient.getBPM()));
                        patient2Temp.setText(String.valueOf(secondPatient.getTemp()));
                        patient2bpm.setText(String.valueOf(secondPatient.getBPM()));

                        if (firstPatient.shouldAlarm(minimumHeartRate, maximumHeartRate)) {
                            // if the alarm is not triggered, trigger it
                            if (!theAlarm.isTriggered(1)) {
                                theAlarm.trigger(1);
                                alarmIsReviewed = false;

                                displayAlarmMessage(1);
                                while (!alarmIsReviewed) {
                                    try {
                                        Thread.sleep(1000);
                                    } catch (InterruptedException ex) {
                                        Logger.getLogger(HomePanel.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                }

                            }

                        }

                        if (secondPatient.shouldAlarm(minimumHeartRate, maximumHeartRate)) {
                            // if the alarm is not triggered, trigger it
                            if (!theAlarm.isTriggered(2)) {
                                theAlarm.trigger(2);
                                alarmIsReviewed = false;

                                displayAlarmMessage(2);
                                while (!alarmIsReviewed) {
                                    try {
                                        Thread.sleep(1000);
                                    } catch (InterruptedException ex) {
                                        Logger.getLogger(HomePanel.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                }

                            }
                        }

                        Thread.sleep(500);
                    }

                }
                return null;
            }
        };
        ecgController.plot(ecgDrawPanel1, ecgDrawPanel2, firstPatient, secondPatient);
        worker.execute();
    }

    private void displayAlarmMessage(int patientID) {
        if (patientID == 1) {
            jLabel7.setVisible(true);
        } else {
            jLabel6.setVisible(true);
        }
        Object[] options = {"OK"};
        int input = JOptionPane.showOptionDialog(this,
                "Patient " + patientID + " shows a very low heart rate!", " Alarm!",
                JOptionPane.PLAIN_MESSAGE,
                JOptionPane.ERROR_MESSAGE,
                null,
                options,
                options[0]);

        if (input == JOptionPane.OK_OPTION || input == -1) {
            this.alarmIsReviewed = true;
            this.theAlarm.stop(patientID);
            if (patientID == 1) {
                jLabel7.setVisible(false);
            } else {
                jLabel6.setVisible(false);
            }
        }
    }

    public void setOnScreenFlag() {
        this.isOnScreen = true;
        this.displayChart();
    }

    public void setNotOnScreenFlag() {
        this.isOnScreen = false;
        ecgController.cancel();
        if (worker != null) {
            worker.cancel(true);
        }
    }

    public void readPatients(ArrayList<Patient> thePatients) {
        // reading the patients, and updating the monitor with patient data

        for (Patient aPatient : thePatients) {
            // aPatient.printAll();

            switch (aPatient.getId()) {
                case 1:
                    this.patient1.setText(aPatient.getName());
                    break;
                case 2:
                    this.patient2.setText(aPatient.getName());
                    break;
                case 3:
                    this.patient3.setText(aPatient.getName());
                    break;
                case 4:
                    this.patient4.setText(aPatient.getName());
                    break;
            }
        }

        switch (thePatients.size()) {
            case 0:
                // hide everything
                this.monitor1.setVisible(false);
                this.monitor2.setVisible(false);
                this.monitor3.setVisible(false);
                this.monitor4.setVisible(false);
                this.separator12.setVisible(false);
                this.separator23.setVisible(false);
                this.separator34.setVisible(false);
                break;
            case 1:
                this.monitor1.setVisible(true);
                this.monitor2.setVisible(false);
                this.monitor3.setVisible(false);
                this.monitor4.setVisible(false);
                this.separator12.setVisible(false);
                this.separator23.setVisible(false);
                this.separator34.setVisible(false);
                break;
            case 2:
                this.monitor1.setVisible(true);
                this.monitor2.setVisible(true);
                this.separator12.setVisible(true);
                this.separator23.setVisible(false);
                this.monitor3.setVisible(false);
                this.monitor4.setVisible(false);
                this.separator34.setVisible(false);
                break;
            case 3:
                this.monitor1.setVisible(true);
                this.monitor2.setVisible(true);
                this.separator12.setVisible(true);
                this.separator23.setVisible(true);
                this.separator34.setVisible(false);
                this.monitor3.setVisible(true);
                this.monitor4.setVisible(false);
                break;
            case 4:
                this.monitor1.setVisible(true);
                this.monitor2.setVisible(true);
                this.monitor3.setVisible(true);
                this.monitor4.setVisible(true);
                this.separator12.setVisible(true);
                this.separator23.setVisible(true);
                this.separator34.setVisible(true);
                break;
            default:
                break;
        }

        this.revalidate();

    }

    private void confirmDelete(int id) {
        // setting up the buttons to use with the popup
        JButton[] theButtons = new JButton[2];
        theButtons[0] = new JButton();
        theButtons[1] = new JButton();

        theButtons[0].setName("Yes");
        theButtons[0].setText("Yes");
        theButtons[1].setName("No");
        theButtons[1].setText("No");

        // setting up the action listeners for the new buttons
        theButtons[0].addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SwingUtilities.getWindowAncestor(theButtons[1]).dispose();
                delete(id);
            }

        });
        // setting up the action listeners for the new buttons
        theButtons[1].addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SwingUtilities.getWindowAncestor(theButtons[1]).dispose();
            }

        });

        // displaying the dialog
        JOptionPane.showOptionDialog(this, "Are you sure you want to delete this patient?", " Delete Patient", 0, 0, null, theButtons, theButtons[0]);

    }

    private void delete(int id) {
        mainFrame topFrame = (mainFrame) SwingUtilities.getWindowAncestor(this);
        topFrame.deletePatient(id);
    }

    public void setValues(int minBPM, int maxBPM) {
        this.maximumHeartRate = minBPM;
        this.minimumHeartRate = maxBPM;
    }

}
