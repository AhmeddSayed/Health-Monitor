/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Ahmed
 */
public class Settings extends javax.swing.JPanel {

    /**
     * Creates new form Settings
     */
    boolean maxBPMEmpty, minBPMEmpty, maxTempEmpty, minTempEmpty;

    public Settings() {
        initComponents();

        this.maxBPMTextField.getDocument().addDocumentListener(new DocumentListener() {

            public void changedUpdate(DocumentEvent e) {
                changed();
            }

            public void removeUpdate(DocumentEvent e) {
                changed();
            }

            public void insertUpdate(DocumentEvent e) {
                changed();
            }

            public void changed() {
                if (maxBPMTextField.getText().isEmpty()) {
                    maxBPMEmpty = true;
                } else {
                    maxBPMEmpty = false;
                }
            }
        });
        this.minBPMTextField.getDocument().addDocumentListener(new DocumentListener() {

            public void changedUpdate(DocumentEvent e) {
                changed();
            }

            public void removeUpdate(DocumentEvent e) {
                changed();
            }

            public void insertUpdate(DocumentEvent e) {
                changed();
            }

            public void changed() {
                if (minBPMTextField.getText().isEmpty()) {
                    minBPMEmpty = true;
                } else {
                    minBPMEmpty = false;
                }
            }
        });
        this.maxTempTextField.getDocument().addDocumentListener(new DocumentListener() {

            public void changedUpdate(DocumentEvent e) {
                changed();
            }

            public void removeUpdate(DocumentEvent e) {
                changed();
            }

            public void insertUpdate(DocumentEvent e) {
                changed();
            }

            public void changed() {
                if (maxTempTextField.getText().isEmpty()) {
                    maxTempEmpty = true;
                } else {
                    maxTempEmpty = false;
                }
            }
        });
        this.minTempTextField.getDocument().addDocumentListener(new DocumentListener() {

            public void changedUpdate(DocumentEvent e) {
                changed();
            }

            public void removeUpdate(DocumentEvent e) {
                changed();
            }

            public void insertUpdate(DocumentEvent e) {
                changed();
            }

            public void changed() {
                if (minTempTextField.getText().isEmpty()) {
                    minTempEmpty = true;
                } else {
                    minTempEmpty = false;
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        minTempTextField = new javax.swing.JTextField();
        maxTempTextField = new javax.swing.JTextField();
        minBPMTextField = new javax.swing.JTextField();
        maxBPMTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        cancel = new javax.swing.JButton();

        jLabel1.setText("Min Tempreature:");

        jLabel2.setText("Max Tempreature:");

        jLabel3.setText("Min BPM:");

        jLabel4.setText("Max BPM:");

        minTempTextField.setText("jTextField1");
        minTempTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minTempTextFieldActionPerformed(evt);
            }
        });

        maxTempTextField.setText("jTextField1");

        minBPMTextField.setText("jTextField1");

        maxBPMTextField.setText("jTextField1");

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(cancel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(maxBPMTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minTempTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minBPMTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxTempTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(minTempTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(maxTempTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(minBPMTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(maxBPMTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(cancel))
                .addContainerGap(22, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void minTempTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minTempTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minTempTextFieldActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        mainFrame theFrame = (mainFrame) SwingUtilities.getWindowAncestor(this);
        theFrame.showHome();
    }//GEN-LAST:event_cancelActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (minTempEmpty) {
            // error, input minimum Tempreature
            JOptionPane.showMessageDialog(this, "Please enter a valid minimum Tempreature.", " Error!", 0);
        } else if (maxTempEmpty) {
            // error, input maximum tempreature
            JOptionPane.showMessageDialog(this, "Please enter a valid maximum Tempreature.", " Error!", 0);

        } else if (minBPMEmpty) {
            // error, input minimum BPM
            JOptionPane.showMessageDialog(this, "Please enter a valid minimum BPM value.", " Error!", 0);

        } else if (maxBPMEmpty) {
            // error, input maximum BPM
            JOptionPane.showMessageDialog(this, "Please enter a valid maximum BPM value.", " Error!", 0);
        } else {
            updateValues();
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField maxBPMTextField;
    private javax.swing.JTextField maxTempTextField;
    private javax.swing.JTextField minBPMTextField;
    private javax.swing.JTextField minTempTextField;
    // End of variables declaration//GEN-END:variables

    private void updateValues() {
        mainFrame theFrame = (mainFrame) SwingUtilities.getWindowAncestor(this);
        theFrame.maxBPM = Integer.valueOf(this.maxBPMTextField.getText());
        theFrame.minBPM = Integer.valueOf(this.minBPMTextField.getText());
        theFrame.maxTemp = Float.valueOf(this.maxTempTextField.getText());
        theFrame.minTemp = Float.valueOf(this.minTempTextField.getText());
        theFrame.showHome();
    }

    public void setValues(int minBPM, int maxBPM, Float minTemp, Float maxTemp) {
        this.minTempTextField.setText(String.valueOf(minTemp));
        this.maxTempTextField.setText(String.valueOf(maxTemp));
        this.minBPMTextField.setText(String.valueOf(minBPM));
        this.maxBPMTextField.setText(String.valueOf(maxBPM));
    }
}
